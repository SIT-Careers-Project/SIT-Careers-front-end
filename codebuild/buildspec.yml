version: 0.2

env:
  variables:
    REPOSITORY_URI: "192479299400.dkr.ecr.ap-southeast-1.amazonaws.com/sit-careers"

phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - echo Logging in Docker Hub
      - docker login --username $USER_DOCKER_HUB -p $PASSWORD_DOCKER_HUB
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - cp $CODEBUILD_SRC_DIR_ENV/.env $CODEBUILD_SRC_DIR/.env
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:fe-dev-$IMAGE_TAG -f ./docker/app/Dockerfile.dev .
      - docker build -t $REPOSITORY_URI:nginx-dev-$IMAGE_TAG -f ./docker/nginx/Dockerfile .
      - docker tag $REPOSITORY_URI:fe-dev-$IMAGE_TAG $REPOSITORY_URI:fe-dev-latest
      - docker tag $REPOSITORY_URI:nginx-dev-$IMAGE_TAG $REPOSITORY_URI:nginx-dev-latest
  post_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:fe-dev-$IMAGE_TAG
      - docker push $REPOSITORY_URI:nginx-dev-$IMAGE_TAG
      - echo Writing images definitions file...
      - printf '[{"name":"sit-careers-fe","imageUri":"%s"},' $REPOSITORY_URI:fe-dev-$IMAGE_TAG > imagedefinitions.json
      - printf '{"name":"sit-careers-fe-nginx","imageUri":"%s"}]' $REPOSITORY_URI:nginx-dev-$IMAGE_TAG >> imagedefinitions.json

artifacts:
    files: imagedefinitions.json

cache:
  paths:
    - 'node_modules/*'
